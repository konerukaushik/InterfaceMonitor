!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BUFSIZE	include/InMn_pcap.h	40;"	d
CC	src/Makefile	/^CC=gcc$/;"	m
CFLAGS	src/Makefile	/^CFLAGS=-g -fPIC -lpcap -lpthread -Wall -I .  $/;"	m
CODE_DIR	Makefile	/^CODE_DIR= src$/;"	m
DEPS	src/Makefile	/^DEPS= -I$(SRC)\/include$/;"	m
EOK	include/InMn_include.h	28;"	d
ERROR	include/InMn_include.h	27;"	d
ETHERNET_ADDRS_LEN	include/InMn_packet.h	21;"	d
ETHERNET_HEADER_SIZE	include/InMn_packet.h	17;"	d
HELP	include/InMn_include.h	32;"	d
IP_DF	include/InMn_packet.h	50;"	d
IP_HEADER_LENGTH	include/InMn_packet.h	59;"	d
IP_MF	include/InMn_packet.h	51;"	d
IP_OFFMASK	include/InMn_packet.h	52;"	d
IP_RF	include/InMn_packet.h	49;"	d
IP_VERSION	include/InMn_packet.h	60;"	d
InMn_add_interfaces_info	src/InMn_util.c	/^InMn_add_interfaces_info (ifaddrs_t *interface_info) $/;"	f
InMn_alloc_mem_struct	src/InMn_util.c	/^InMn_alloc_mem_struct ()$/;"	f
InMn_if_addrs	include/InMn_include.h	/^    ifaddrs_t          *InMn_if_addrs;$/;"	m	struct:InMn_if_info_
InMn_if_info	include/InMn_include.h	/^InMn_if_info_t  *InMn_if_info;$/;"	v
InMn_if_info_	include/InMn_include.h	/^struct InMn_if_info_ {$/;"	s
InMn_if_info_t	include/InMn_include.h	/^typedef struct InMn_if_info_ InMn_if_info_t;$/;"	t	typeref:struct:InMn_if_info_
InMn_monitor_interface	src/InMn_pcap.c	/^InMn_monitor_interface (u_char *argv, struct pcap_pkthdr *packethdr,$/;"	f
InMn_monitor_interfaces_thread	src/InMn_pthread.c	/^InMn_monitor_interfaces_thread()$/;"	f
InMn_pcap_monitor	src/InMn_pcap.c	/^InMn_pcap_monitor (InMn_if_info_t  *interface_info) $/;"	f
InMn_retrieve_interfaces	src/InMn_util.c	/^InMn_retrieve_interfaces ()$/;"	f
InMn_stats	include/InMn_include.h	/^    InMn_stats_t        InMn_stats;$/;"	m	struct:InMn_if_info_
InMn_stats_	include/InMn_include.h	/^struct InMn_stats_ {$/;"	s
InMn_stats_t	include/InMn_include.h	/^typedef struct InMn_stats_   InMn_stats_t;$/;"	t	typeref:struct:InMn_stats_
InMn_thread_info	include/InMn_pthread.h	/^thread_info_t  *InMn_thread_info;$/;"	v
InMn_thread_info_mem_alloc	src/InMn_pthread.c	/^InMn_thread_info_mem_alloc()$/;"	f
InMn_thread_init	src/InMn_pthread.c	/^InMn_thread_init(void *InMn_thread_args)$/;"	f	file:
Interfaces_count	include/InMn_include.h	/^int Interfaces_count;$/;"	v
LOG	include/InMn_include.h	40;"	d
OBJDIR	src/Makefile	/^OBJDIR=$(SRC)\/obj$/;"	m
OBJ_FILES	src/Makefile	/^OBJ_FILES = $(OBJDIR)\/$(wildcard *.o)$/;"	m
PRMISC	include/InMn_pcap.h	42;"	d
Packet_count	include/InMn_include.h	/^    int         Packet_count;$/;"	m	struct:InMn_stats_
SRC	Makefile	/^export SRC=$(PWD)$/;"	m
SRC_FILES	src/Makefile	/^SRC_FILES = $(wildcard *.c)$/;"	m
TH_ACK	include/InMn_packet.h	77;"	d
TH_CWR	include/InMn_packet.h	80;"	d
TH_ECE	include/InMn_packet.h	79;"	d
TH_FIN	include/InMn_packet.h	73;"	d
TH_FLAGS	include/InMn_packet.h	81;"	d
TH_OFFLENGTH	include/InMn_packet.h	71;"	d
TH_PUSH	include/InMn_packet.h	76;"	d
TH_RST	include/InMn_packet.h	75;"	d
TH_SYN	include/InMn_packet.h	74;"	d
TH_URG	include/InMn_packet.h	78;"	d
TOMS	include/InMn_pcap.h	44;"	d
_INMN_INCLUDE_H_	include/InMn_include.h	5;"	d
_INMN_PACKET_H_	include/InMn_packet.h	14;"	d
_INMN_PCAP_H_	include/InMn_pcap.h	12;"	d
_INMN_PTHREAD_H_	include/InMn_pthread.h	11;"	d
_INMN_UTIL_H_	include/InMn_util.h	11;"	d
argv	include/InMn_pthread.h	/^    InMn_if_info_t  *argv;            \/* Thread Infomation *\/$/;"	m	struct:thread_info_
ether_dhost	include/InMn_packet.h	/^    u_int8_t  ether_dhost[ETHERNET_ADDRS_LEN];$/;"	m	struct:ethernet_header
ether_shost	include/InMn_packet.h	/^    u_int8_t  ether_shost[ETHERNET_ADDRS_LEN];$/;"	m	struct:ethernet_header
ether_type	include/InMn_packet.h	/^    u_int16_t ether_type;$/;"	m	struct:ethernet_header
ethernet_header	include/InMn_packet.h	/^struct ethernet_header {$/;"	s
ethernet_header_t	include/InMn_packet.h	/^typedef struct ethernet_header ethernet_header_t;$/;"	t	typeref:struct:ethernet_header
ifaddrs_t	include/InMn_include.h	/^typedef struct ifaddrs       ifaddrs_t;$/;"	t	typeref:struct:ifaddrs
ip_dst	include/InMn_packet.h	/^    struct in_addr ip_src, ip_dst;  \/* source and dest address *\/$/;"	m	struct:ip_header	typeref:struct:ip_header::
ip_header	include/InMn_packet.h	/^struct ip_header {$/;"	s
ip_header_t	include/InMn_packet.h	/^typedef struct ip_header ip_header_t;$/;"	t	typeref:struct:ip_header
ip_hl	include/InMn_packet.h	/^    unsigned int ip_hl:4;       \/* header length *\/$/;"	m	struct:ip_header
ip_id	include/InMn_packet.h	/^    u_short ip_id;          \/* identification *\/$/;"	m	struct:ip_header
ip_len	include/InMn_packet.h	/^    u_short ip_len;         \/* total length *\/$/;"	m	struct:ip_header
ip_off	include/InMn_packet.h	/^    u_short ip_off;         \/* fragment offset field *\/$/;"	m	struct:ip_header
ip_p	include/InMn_packet.h	/^    u_int8_t ip_p;          \/* protocol *\/$/;"	m	struct:ip_header
ip_src	include/InMn_packet.h	/^    struct in_addr ip_src, ip_dst;  \/* source and dest address *\/$/;"	m	struct:ip_header	typeref:struct:ip_header::in_addr
ip_sum	include/InMn_packet.h	/^    u_short ip_sum;         \/* checksum *\/$/;"	m	struct:ip_header
ip_tos	include/InMn_packet.h	/^    u_int8_t ip_tos;            \/* type of service *\/$/;"	m	struct:ip_header
ip_ttl	include/InMn_packet.h	/^    u_int8_t ip_ttl;            \/* time to live *\/$/;"	m	struct:ip_header
ip_v	include/InMn_packet.h	/^    unsigned int ip_v:4;        \/* version *\/$/;"	m	struct:ip_header
main	src/InMn_main.c	/^int main (int argc, char **argv)$/;"	f
next	include/InMn_include.h	/^    InMn_if_info_t     *next;$/;"	m	struct:InMn_if_info_
next	include/InMn_pthread.h	/^    thread_info_t   *next;$/;"	m	struct:thread_info_
tcp_header	include/InMn_packet.h	/^    struct tcp_header {$/;"	s
tcp_header_t	include/InMn_packet.h	/^typedef struct tcp_header tcp_header_t;$/;"	t	typeref:struct:tcp_header
tcp_seq	include/InMn_packet.h	/^    typedef u_int tcp_seq;$/;"	t
th_ack	include/InMn_packet.h	/^        tcp_seq th_ack;     \/* acknowledgement number *\/$/;"	m	struct:tcp_header
th_dport	include/InMn_packet.h	/^        u_short th_dport;   \/* destination port *\/$/;"	m	struct:tcp_header
th_flags	include/InMn_packet.h	/^        u_char th_flags;$/;"	m	struct:tcp_header
th_offx2	include/InMn_packet.h	/^        u_char th_offx2;    \/* data offset, rsvd *\/$/;"	m	struct:tcp_header
th_seq	include/InMn_packet.h	/^        tcp_seq th_seq;     \/* sequence number *\/$/;"	m	struct:tcp_header
th_sport	include/InMn_packet.h	/^        u_short th_sport;   \/* source port *\/$/;"	m	struct:tcp_header
th_sum	include/InMn_packet.h	/^        u_short th_sum;     \/* checksum *\/$/;"	m	struct:tcp_header
th_urp	include/InMn_packet.h	/^        u_short th_urp;     \/* urgent pointer *\/$/;"	m	struct:tcp_header
th_win	include/InMn_packet.h	/^        u_short th_win;     \/* window *\/$/;"	m	struct:tcp_header
thread_id	include/InMn_pthread.h	/^    pthread_t        thread_id;$/;"	m	struct:thread_info_
thread_info_	include/InMn_pthread.h	/^struct thread_info_ {$/;"	s
thread_info_t	include/InMn_pthread.h	/^typedef struct thread_info_ thread_info_t;$/;"	t	typeref:struct:thread_info_
thread_num	include/InMn_pthread.h	/^    int              thread_num;      \/* Application thread number *\/$/;"	m	struct:thread_info_
